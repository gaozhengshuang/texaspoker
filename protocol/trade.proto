syntax = "proto2";
package msg;

////////////////////////////////////////////////房屋交易/////////////////////////////////////////////

enum TradeState {
    Tradeing = 1;       //交易中
    CanReward = 2;      //交易完成能领金币
    SellOk = 3;         //卖成功
    BuyOk = 4;          //买成功
    TradeCancel = 5;    //交易取消 
}

//请求房屋交易列表
message C2GW_ReqHouseTradeList
{
    optional uint32 location = 1;        //区域
    optional uint32 sublocation = 2;     //子区域   
    optional uint32 housetype = 3;       //房屋类型 1-5 1房2房。。。
    optional uint32 pricemin = 4;        //价格区间小
    optional uint32 pricemax = 5;        //价格区间大
    optional uint32 houselevel = 6;      //房屋等级 1-5
    optional string name = 7;           //房屋名字
    optional bool pricedec = 8;         //价格降序
    optional uint32 startnum = 9;       //开始行数 从0开始
}

//房屋交易信息
message SimpleHouseTrade
{
    optional uint64 tradeuid = 1;        //交易唯一id
    optional string name = 2;           //房产名字
    optional uint32 houselevel = 3;      //房屋等级
    optional uint32 price = 4;           //房屋总价
    optional uint32 area = 5;            //房屋面积
    optional uint32 income = 6;          //房屋收益
    optional uint32 houseuid = 7;        //房屋唯一id
    optional uint32 housebaseid = 8;     //房屋表id
    optional uint32 endtime = 9;         //交易结束时间
    optional uint32 location = 10;       //区域
    optional uint32 sublocation = 11;    //子区域   
    optional uint32 posx = 12;           //x坐标
    optional uint32 posy = 13;           //y坐标
    optional uint32 state = 14;
    optional uint32 housetype = 15;      //房屋类型 几房
    optional uint32 buildid = 16; 
}

//返回房屋交易列表
message GW2C_RetHouseTradeList
{
    repeated SimpleHouseTrade list = 1; //
}

//交易房屋
message C2GW_TradeHouse
{
    optional uint64 houseuid = 1;        //房屋唯一id
    optional uint32 price = 2;           //价格
}

//交易返回
message GW2C_RetTradeHouse
{
    optional uint64 tradeuid = 1;    
}

//买房屋
message C2GW_BuyTradeHouse
{
    optional uint64 tradeuid = 1;
    optional uint64 houseuid = 2;
}

//买房屋返回
message GW2C_RetBuyTradeHouse
{
    optional uint64 tradeuid = 1;    
}

//查询交易记录
message C2GW_ReqTradeHouseHistory
{
}

message TradeHouseHistory
{
    optional string name = 1;           //房产名字
    optional uint32 houselevel = 2;     //房屋等级
    optional uint32 price = 3;          //房屋总价
    optional uint32 area = 4;           //房屋面积
    optional uint32 income = 5;         //房屋收益
    optional uint32 tradetime = 6;      //交易结束时间
    optional uint32 housetype = 7;      //房屋类型
    optional uint32 housebaseid = 8;    //房屋表id
    optional uint32 state = 9;          //状态
    optional uint64 tradeuid = 10;      //交易id
}

//返回交易记录
message GW2C_RetTradeHouseHistory
{
    repeated TradeHouseHistory list = 1;    //交易列表
}

//领取交易奖励
message C2GW_GetTradeHouseReward
{
    optional uint64 tradeuid = 1;
}

message GW2C_RetGetTradeHouseReward
{
    optional uint64 tradeuid = 2;
}

//取消订单
message C2GW_CancelTradeHouse
{
    optional uint64 houseuid = 1;
}

//取消订单返回
message GW2C_RetCancelTradeHouse
{
    optional uint64 tradeuid = 2;
}

///////////////////////////////////////////////车辆交易////////////////////////////////////////////

//请求车辆交易列表
message C2GW_ReqCarTradeList
{
    optional uint32 cartype = 2;            //类型
    optional uint32 carsubtype = 3;       //子类型
    optional uint32 pricemin = 4;        //价格区间小
    optional uint32 pricemax = 5;        //价格区间大
    optional uint32 carlevel = 6;      //汽车等级 1-5
    optional string name = 7;           //汽车名字
    optional bool pricedec = 8;         //价格降序
    optional uint32 startnum = 9;       //开始行数 从0开始
}

//车辆交易信息
message SimpleCarTrade
{
    optional uint64 tradeuid = 1;           //交易唯一id
    optional uint32 caruid = 2;             //唯一id
    optional uint32 price = 3;              //车辆总价
    optional uint32 income = 4;             //车辆收益
    optional uint32 carbaseid = 5;          //车辆表id
    optional uint32 endtime = 6;            //交易结束时间
    optional uint32 ownerid = 7;
    optional uint32 carlevel = 8;           //车辆等级
    optional uint32 cartype = 9;            //车辆类型
    optional string name = 10;              //名字 
}

//返回车辆交易列表
message GW2C_RetCarTradeList
{
    repeated SimpleCarTrade list = 1; //
}

//交易车辆
message C2GW_TradeCar
{
    optional uint64 caruid = 1;             //汽车唯一id
    optional uint32 price = 2;              //价格
}

//买车
message C2GW_BuyTradeCar
{
    optional uint64 tradeuid = 1;
    optional uint64 caruid = 2;
}

//查询交易记录
message C2GW_ReqTradeCarHistory
{
}

message TradeCarHistory
{
    optional uint64 tradeuid = 1;           //交易唯一id
    optional uint64 caruid = 2;             //唯一id
    optional uint32 price = 3;              //车辆总价
    optional uint32 income = 4;             //车辆收益
    optional uint32 carbaseid = 5;          //车辆表id
    optional uint32 endtime = 6;            //交易结束时间
    optional uint32 carlevel = 7;           //车辆等级
    optional uint32 cartype = 8;            //车辆类型
    optional uint32 state = 9;
    optional uint32 tradetime = 10;
}

//返回交易记录
message GW2C_RetTradeCarHistory
{
    repeated TradeCarHistory list = 1;    //交易列表
}

//领取交易奖励
message C2GW_GetTradeCarReward
{
    optional uint64 tradeuid = 1;
}

message GW2C_RetGetTradeCarReward
{
    optional uint64 tradeuid = 1;
}

//取消订单
message C2GW_CancelTradeCar
{
    optional uint64 caruid = 1;
}

/////////////////////////////////////////////////////道具交易/////////////////////////////////////////////////////

//请求道具交易列表
message C2GW_ReqItemTradeList
{
    optional uint32 itemtype = 1;       //类型类型
    optional uint32 itemsubtype = 2;    //子类型
    optional uint32 pricemin = 4;        //价格区间小
    optional uint32 pricemax = 5;        //价格区间大
    optional string name = 7;           //道具名字
    optional bool pricedec = 8;         //价格降序
    optional uint32 startnum = 9;       //开始行数 从0开始
    optional uint64 userid = 10;
}

//道具交易信息
message SimpleItemTrade
{
    optional uint64 tradeuid = 1;           //交易唯一id
    optional uint32 itemid = 2;             //道具id
    optional uint32 itemnum = 3;              //道具数量
    optional uint32 price = 4;             //定价
    optional uint32 endtime = 5;            //交易结束时间
    optional uint32 ownerid = 6;            
    optional uint32 itemtype = 7;            //类型
    optional uint32 itemsubtype = 8;        //子类型
    optional string name = 9;              //名字 
}

//返回道具交易列表
message GW2C_RetItemTradeList
{
    repeated SimpleItemTrade list = 1; //
    optional bool ismine = 2;
}

//交易道具
message C2GW_TradeItem
{
    optional uint32 itemid = 1;             //道具id
    optional uint32 itemnum = 2;
    optional uint32 price = 3;              //价格
}

message GW2C_RetTradeItem
{
    optional uint64 tradeuid = 1;
}

//买道具
message C2GW_BuyTradeItem
{
    optional uint64 tradeuid = 1;
    optional uint64 userid = 2;
}

message GW2C_RetBuyTradeItem
{
    optional uint64 tradeuid = 1;
}

//查询交易记录
message C2GW_ReqTradeItemHistory
{
}

message TradeItemHistory
{
    optional uint64 tradeuid = 1;           //交易唯一id
    optional uint32 itemid = 2;             //道具id
    optional uint32 itemnum = 3;              //道具数量
    optional uint32 price = 4;             //定价
    optional uint32 tradetime = 5;            //交易时间
    optional uint32 state = 9;
}

//返回交易记录
message GW2C_RetTradeItemHistory
{
    repeated TradeItemHistory list = 1;    //交易列表
}

//领取交易奖励
message C2GW_GetTradeItemReward
{
    optional uint64 tradeuid = 1;
}

message GW2C_RetGetTradeItemReward
{
    optional uint64 tradeuid = 1;
}

//取消订单
message C2GW_CancelTradeItem
{
    optional uint64 tradeuid = 1;
}

message GW2C_RetCancelTradeItem
{
    optional uint64 tradeuid = 1;
}


