syntax = "proto2";
package msg;
import "autoreset.proto";

message EntityBase {
    optional int64  roleid  = 1;
    optional string name    = 2;
    optional string head    = 3;
    optional int32  sex     = 4;
    optional string account = 5;
    optional int32  level   = 6;
    optional int32  exp     = 7;
    optional int64  gold    = 8;        // 金币
    optional int64  diamond = 9;        // 钻石
    optional int64  yuanbao = 10;       // 元宝
    optional int32  age     = 11;
    optional string bio     = 12;       // 个人简介签名
    optional string sign    = 13;       // 个性签名
    optional string ip      = 14;       // ip
}

// 简单计数器
message SimpleCounter {
    optional int32 freestep = 1;
    optional int64 givestep = 2;
    optional int64 money_cost = 3;
    optional int64 money_cost_reset = 4;
}

// 免费赠送金币
message FreePresentMoney {
    optional int32 count = 1;
    optional int64 tmrecord = 2;
}

// 微信相关
message UserWechat {
    optional string openid = 1;
}

// 玩家任务
message UserTask {
    repeated TaskData tasks = 1;
}

message TaskData {
    optional int32 id = 1;         // 任务id
    optional int32 progress = 2;   // 本次完成进度
    optional int32 completed = 3;  // 完成标记
}

// 抽奖历史记录
message LuckyDrawItem {
    optional int64 time = 1;
    optional int32 item = 2;
    optional int32 num = 3;
    optional int32 worth = 4;
}
message LuckyDrawRecord {
    repeated LuckyDrawItem drawlist = 1;    // 历史记录列表
    optional int64 totalvalue = 2;          // 总价值
}

// 地图事件
message MapEvent {
    optional int64 id = 1;         // 事件uid
    optional int32 tid = 2;        // 事件tid
    optional int32 longitude = 3;   // 经度 * 100000
    optional int32 latitude = 4;    // 纬度 * 100000
}

// 玩家地图事件
message UserMapEvent {
    repeated MapEvent events = 1;   // 事件列表
    optional int64 tmrefresh = 2;   // 刷新时间(服务器使用)
}

// 签到
message UserSignIn {
    optional int32 signdays    = 1;    // 已经签了几天
    optional int32 signtime    = 2;    // 上次签到时间
}

// 个人统计
message UserStatistics {
    optional int64 tmlogin  = 1;       // 登陆时间
    optional int64 tmlogout = 2;       // 离线时间
    optional int32 continuelogin = 3;  // 连续登陆
    optional int32 nocountlogin = 4;   // 不统计
    optional int32 totalrecharge = 5;  // 总充值

    optional int64 createdtime = 6;             //创建时间
    optional int32 maxgold = 7;                 //最高拥有金币
    optional int32 maxgoldonetimes = 8;         //一把最高赢取金币
    optional int32 friendnum = 9;               //好友数量
    optional int32 gametimes = 10;              //游戏总局数
    optional int32 wintimes = 11;               //游戏胜局
    optional int32 entrytimes = 12;             //入局次数
    optional int32 showdowntimes = 13;          //摊牌次数
    optional int32 gametimes2 = 14;             //比赛总局数         
    optional int32 wintimes2 = 15;              //比赛胜局
    optional int32 entrytimes2 = 16;            //比赛入局次数
    optional int32 showdowntimes2 = 17;         //比赛摊牌次数
    optional int32 mttjointimes = 18;           //锦标赛参与次数
    optional int32 mttprizetimes = 19;          //锦标赛奖励次数
    optional int32 championtimes = 20;          //竞标赛夺冠次数
    repeated int32 maxhand = 21;                //最大手牌
    optional int32 isoffline = 22;              //是否离线
    optional int32 stateid = 23;                //房间号
    optional int32 stateconfid = 24;            //房间id
}
//玩家vip
message UserVip {
    optional int32 vipexp = 1;                 // 会员成长值
    optional int32 viptime = 2;                // 普通vip到期时间戳  
    optional int32 yearviptime = 3;            // 年度vip到期时间戳
    optional int32 viplevel = 4;               // vip等级(貌似前端会根据成长值自己计算)
}

// 杂项数据
message UserMiscData {
    optional string invitationcode = 1; // 邀请码
	optional int32 lastgoldtime = 2; // 定时领金币领取的时间戳
	optional int32 silvercardtime = 3; //白银卡到期时间
	optional int32 silvercardawardstate = 4; //白银卡每日奖励状态
	optional int32 goldcardtime = 5; //黄金卡到期时间
	optional int32 goldcardawardstate = 6; //黄金卡每日奖励状态
}

//兑换记录针对有配置logid的奖品做的记录
message AwardRecord {
	optional int32 logid = 1;
	optional int32 time = 2;
	optional int32 awardid = 3;
}

//兑换信息针对限购(次数或时间)的奖品做的记录
message AwardGetInfo {
	optional int32 id = 1;
	optional int32 count = 2;
	optional int32 time = 3;
}

message UserBase {
    optional UserMiscData misc = 1;
    optional UserStatistics statics = 2;
    optional UserSignIn sign = 3;
    repeated UserAddress addrlist   = 4;    // 地址列表
    optional SimpleCounter scounter = 5;    // 简单计数器
    optional UserWechat wechat = 6;         // 微信
    optional UserTask task = 7;             // 任务
    optional LuckyDrawRecord luckydraw = 8; // 抽奖
    optional UserMapEvent mapevent = 9;     // 地图事件
    optional AutoResetValues arvalues = 10; // 变量自动重置
	repeated AwardRecord awardrecord = 11; 	// 兑换记录
	repeated AwardGetInfo awardgetinfo = 12; // 兑换信息	
    optional UserVip vip = 13;              //vip
}

message UserAddress {
    optional string receiver = 1;
    optional string phone = 2;
    optional string address = 3;
}

message ItemData {
    optional int32 id = 1;     // 目前id就是道具baseid
    optional int32 num = 2;
    optional int32 pos = 3;     // ItemPos
}

message ItemBin {
    repeated ItemData items = 1;        // 
}

message Serialize {
    optional EntityBase entity  = 1;
    optional UserBase   base    = 2;
    optional ItemBin    item    = 3;
}

//只在gateserver上应用的数据
message GateSerialize {
	optional int32 bankruptcount = 1; //当天领取破产补助的次数
}

